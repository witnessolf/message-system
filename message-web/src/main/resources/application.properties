# TODO please replace 【must】 config value


# todo [database] ip/port/username/password 【must】
austin.database.ip=localhost
austin.database.port=3306
austin.database.username=root
austin.database.password=root

# TODO  choose : kafka/eventBus/rocketMq/rabbitMq, default  eventBus
austin.mq.pipeline=kafka

# todo [kafka] ip/port【optional】, if austin.mq.pipeline=kafka 【must】
austin.kafka.ip=austin.kafka
austin.kafka.port=9092

# todo [rocketMq] 【optional】, if austin.mq.pipeline=rocketMq【must】
austin.rocketmq.nameserver.ip=
austin.rocketmq.nameserver.port=

# todo [rabbitMq] 【optional】, if austin.mq.pipeline=rabbitMq【must】
austin.rabbitmq.ip=
austin.rabbitmq.port=

########################################## database start ##########################################
# notice:mysql version 5.7x !!!
spring.datasource.url=jdbc:mysql://${austin.database.ip}:${austin.database.port}/austin?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull 
spring.datasource.username=${austin.database.username}
spring.datasource.password=${austin.database.password}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
########################################## database end ##########################################

########################################## kafka start ##########################################
spring.kafka.bootstrap-servers=${austin.kafka.ip}:${austin.kafka.port}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto.offset.reset=earliest
spring.kafka.consumer.auto-commit-interval=1000
spring.kafka.consumer.enable-auto-commit=true

###
austin.business.topic.name=austinBusiness
austin.business.recall.topic.name=austinRecall
austin.business.recall.group.name=recallGroupId
austin.business.log.topic.name=austinTraceLog
### TODO kafka tag filter,if you need, replace  tagIdValue ,eg:com.java3y.austin.yyy
austin.business.tagId.key=kafka_tag_id
austin.business.tagId.value=com.java3y.austin.3y
########################################## kafka end ##########################################


########################################## rocketMq start ##########################################
rocketmq.name-server=${austin.rocketmq.nameserver.ip}:${austin.rocketmq.nameserver.port}
rocketmq.producer.group=unique-producer-group
austin.rocketmq.biz.consumer.group=unique-biz-consumer-group
austin.rocketmq.recall.consumer.group=unique-recall-consumer-group
########################################## rocketMq end ##########################################


########################################## RabbitMq start ##########################################
spring.rabbitmq.host=${austin.rabbitmq.ip}
spring.rabbitmq.port=${austin.rabbitmq.port}
server.port=8080
spring.application.name=cl
spring.rabbitmq.username=root
spring.rabbitmq.password=123456
spring.rabbitmq.publisher-confirm-type=correlated
spring.rabbitmq.publisher-returns=true
spring.rabbitmq.virtual-host=/
austin.rabbitmq.topic.name=austinRabbit
austin.rabbitmq.exchange.name=austin.point
########################################## RabbitMq end ##########################################
